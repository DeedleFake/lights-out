{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","size","setSize","_useReducer","useReducer","board","action","type","map","row","y","space","x","Math","abs","Array","fill","Error","concat","_useReducer2","dispatchBoard","won","useMemo","every","react_default","a","createElement","style","display","flexDirection","alignItems","width","xmlns","marginTop","border","borderRadius","viewBox","length","key","transition","cursor","height","rx","onClick","ev","preventDefault","justifyContent","padding","fontSize","min","max","value","onChange","val","parseInt","target","isNaN","backgroundColor","marginLeft","ReactDOM","render","src_App","document","getElementById"],"mappings":"gKA0HeA,SApHH,WAAM,IAAAC,EACOC,mBAAS,GADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACVK,EADUH,EAAA,GACJI,EADIJ,EAAA,GAAAK,EAGcC,qBAC9B,SAACC,EAAOC,GACP,OAAQA,EAAOC,MACd,IAAK,SACJ,OAAOF,EAAMG,IAAI,SAACC,EAAKC,GAAN,OAChBD,EAAID,IAAI,SAACG,EAAOC,GAAR,OACNC,KAAKC,IAAIR,EAAOK,MAAM,GAAKC,IAAM,GAAKN,EAAOK,MAAM,KAAOD,GAC1DG,KAAKC,IAAIR,EAAOK,MAAM,GAAKD,IAAM,GAAKJ,EAAOK,MAAM,KAAOC,GACvDD,EACDA,MAIN,IAAK,QACJ,OAAO,IAAII,MAAMT,EAAOL,MAAMe,KAAK,IAAID,MAAMT,EAAOL,MAAMe,MAAK,IAEhE,QACC,MAAM,IAAIC,MAAJ,wBAAAC,OAAkCZ,EAAOC,SAGlDN,EACA,SAACA,GAAD,OAAU,IAAIc,MAAMd,GAAMe,KAAK,IAAID,MAAMd,GAAMe,MAAK,MAxBpCG,EAAApB,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGVE,EAHUc,EAAA,GAGHC,EAHGD,EAAA,GA2BXE,EAAMC,kBACX,kBAAMjB,EAAMkB,MAAM,SAACd,GAAD,OAASA,EAAIc,MAAM,SAACZ,GAAD,OAAYA,OACjD,CAACN,IAGF,OACCmB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,WACnEN,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUE,MAAO,MAC9DP,EAAAC,EAAAC,cAAA,wBAEAF,EAAAC,EAAAC,cAAA,OACCM,MAAM,8BACNL,MAAO,CACNM,UAAW,GACXC,OAAM,cAAAhB,OAAgBG,EAAM,QAAU,QACtCc,aAAc,IAEfC,QAAO,OAAAlB,OAAS,GAAKb,EAAM,GAAGgC,OAAvB,KAAAnB,OAAiC,GAAKb,EAAMgC,SAElDhC,EAAMG,IAAI,SAACC,EAAKC,GAAN,OACVD,EAAID,IAAI,SAACG,EAAOC,GAAR,OACPY,EAAAC,EAAAC,cAAA,QACCY,IAAK1B,EACLe,MAAO,CACNY,WAAY,WACZC,OAAQnB,GAAO,WAEhBT,EAAG,GAAKA,EAAI,EACZF,EAAG,GAAKA,EAAI,EACZqB,MAAO,EACPU,OAAQ,EACRC,GAAI,EACJ1B,KAAML,EAAQ,UAAY,UAC1BgC,QAAS,SAACC,GACTA,EAAGC,iBACCxB,GAIJD,EAAc,CAAEb,KAAM,SAAUI,MAAO,CAACC,EAAGF,aAOhDc,EAAAC,EAAAC,cAAA,OACCC,MAAO,CACNC,QAAS,OACTC,cAAe,MACfiB,eAAgB,gBAChBb,UAAW,GACVc,QAAS,WAGXvB,EAAAC,EAAAC,cAAA,SACCC,MAAO,CACNqB,SAAU,IAEXzC,KAAK,SACL0C,IAAI,IACJC,IAAI,KACJC,MAAOlD,EACPmD,SAAU,SAACR,GACV,IAAIS,EAAMC,SAASV,EAAGW,OAAOJ,MAAO,IACpCjD,EAAQ,SAACD,GAAD,OACPuD,MAAMH,IAAQA,EAAM,GAAKA,EAAM,GAAKpD,EAAOoD,OAK9C7B,EAAAC,EAAAC,cAAA,UACCC,MAAO,CACN8B,gBAAiB,OACjBtB,aAAc,EACda,SAAU,GACVD,QAAS,EACTW,WAAY,GAEbf,QAAS,kBAAMvB,EAAc,CAAEb,KAAM,QAASN,WAE7CA,IAASI,EAAMgC,OAAS,SAAW,cC3G1CsB,IAASC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.844bd797.chunk.js","sourcesContent":["// @format\n\nimport React, { useReducer, useMemo, useState } from 'react'\n\nimport './style.css'\n\nconst App = () => {\n\tconst [size, setSize] = useState(5)\n\n\tconst [board, dispatchBoard] = useReducer(\n\t\t(board, action) => {\n\t\t\tswitch (action.type) {\n\t\t\t\tcase 'toggle':\n\t\t\t\t\treturn board.map((row, y) =>\n\t\t\t\t\t\trow.map((space, x) =>\n\t\t\t\t\t\t\t(Math.abs(action.space[0] - x) <= 1 && action.space[1] === y) ||\n\t\t\t\t\t\t\t(Math.abs(action.space[1] - y) <= 1 && action.space[0] === x)\n\t\t\t\t\t\t\t\t? !space\n\t\t\t\t\t\t\t\t: space,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\n\t\t\t\tcase 'reset':\n\t\t\t\t\treturn new Array(action.size).fill(new Array(action.size).fill(true))\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown action type: ${action.type}`)\n\t\t\t}\n\t\t},\n\t\tsize,\n\t\t(size) => new Array(size).fill(new Array(size).fill(true)),\n\t)\n\n\tconst won = useMemo(\n\t\t() => board.every((row) => row.every((space) => !space)),\n\t\t[board],\n\t)\n\n\treturn (\n\t\t<div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n\t\t\t<div style={{ display: 'flex', flexDirection: 'column', width: 500 }}>\n\t\t\t\t<h1>Lights Out</h1>\n\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"https://www.w3.org/2000/svg\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginTop: 16,\n\t\t\t\t\t\tborder: `solid 16px ${won ? 'green' : 'grey'}`,\n\t\t\t\t\t\tborderRadius: 32,\n\t\t\t\t\t}}\n\t\t\t\t\tviewBox={`0 0 ${10 * board[0].length} ${10 * board.length}`}\n\t\t\t\t>\n\t\t\t\t\t{board.map((row, y) =>\n\t\t\t\t\t\trow.map((space, x) => (\n\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\tkey={x}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttransition: 'fill .3s',\n\t\t\t\t\t\t\t\t\tcursor: won || 'pointer',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tx={10 * x + 1}\n\t\t\t\t\t\t\t\ty={10 * y + 1}\n\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\theight={8}\n\t\t\t\t\t\t\t\trx={1}\n\t\t\t\t\t\t\t\tfill={space ? '#3333FF' : '#000099'}\n\t\t\t\t\t\t\t\tonClick={(ev) => {\n\t\t\t\t\t\t\t\t\tev.preventDefault()\n\t\t\t\t\t\t\t\t\tif (won) {\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tdispatchBoard({ type: 'toggle', space: [x, y] })\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)),\n\t\t\t\t\t)}\n\t\t\t\t</svg>\n\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\tmarginTop: 16,\n\t\t\t\t\t\t\tpadding: '0 32px',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"2\"\n\t\t\t\t\t\tmax=\"10\"\n\t\t\t\t\t\tvalue={size}\n\t\t\t\t\t\tonChange={(ev) => {\n\t\t\t\t\t\t\tlet val = parseInt(ev.target.value, 10)\n\t\t\t\t\t\t\tsetSize((size) =>\n\t\t\t\t\t\t\t\tisNaN(val) || val < 2 || val > 10 ? size : val,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: 'cyan',\n\t\t\t\t\t\t\tborderRadius: 8,\n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t\tpadding: 8,\n\t\t\t\t\t\t\tmarginLeft: 8,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => dispatchBoard({ type: 'reset', size })}\n\t\t\t\t\t>\n\t\t\t\t\t\t{size !== board.length ? 'Resize' : 'Reset'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// @format\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}